---
# Ansible playbook for installing Docker and Docker Compose on Ubuntu 22.04
- name: Install Docker and Docker Compose
  hosts: all
  become: true
  pre_tasks:
    - name: Check if dpkg is interrupted
      shell: dpkg-query -l | grep -q '^.H'
      register: dpkg_interrupted
      failed_when: false
      changed_when: false

    - name: Fix interrupted dpkg
      shell: dpkg --configure -a
      when: dpkg_interrupted.rc == 0

    - name: Update apt cache after fixing dpkg
      apt:
        update_cache: yes
      when: dpkg_interrupted.rc == 0
  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install required packages
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: present

    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
        state: present

    - name: Install Docker CE
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: present
        update_cache: yes

    - name: Install Docker Compose
      get_url:
        url: https://github.com/docker/compose/releases/download/v2.18.1/docker-compose-linux-x86_64
        dest: /usr/local/bin/docker-compose
        mode: '0755'

    - name: Create docker group
      group:
        name: docker
        state: present

    - name: Set current user variable
      set_fact:
        current_user: "{{ ansible_user | default(lookup('env', 'USER')) }}"

    - name: Add user to docker group
      user:
        name: "{{ current_user }}"
        groups: docker
        append: yes

    - name: Ensure Docker service is enabled and started
      systemd:
        name: docker
        state: started
        enabled: yes

    - name: Create Docker config directory
      file:
        path: /etc/docker
        state: directory
        mode: '0755'

    - name: Configure Docker daemon
      copy:
        content: |
          {
            "log-driver": "json-file",
            "log-opts": {
              "max-size": "10m",
              "max-file": "3"
            }
          }
        dest: /etc/docker/daemon.json
      notify: Restart Docker

  handlers:
    - name: Restart Docker
      systemd:
        name: docker
        state: restarted
